[package]
name = "mprocs"
version = "0.7.3"
description = "TUI for running multiple processes"
repository = "https://github.com/pvolok/mprocs"
authors = ["Pavel Volokitin <pavelvolokitin@gmail.com>"]
license = "MIT"
edition = "2021"
categories = [
  "command-line-interface",
  "command-line-utilities",
  "development-tools",
]
keywords = ["cli", "terminal", "tui", "utility"]

include = ["*"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "mprocs"
path = "main.rs"

[dependencies]
anyhow = "1.0.72"
assert_matches = "1.5.0"
base64 = "0.22.0"
clap = { version = "4.3.19", features = ["cargo"] }
clipboard-win = "5.3.1"
crossterm = { version = "0.28", features = ["event-stream", "serde"] }
dunce = "1.0.4"
# Excluded "textfilter" feature that depends on regex (~0.7 MiB).
flexi_logger = { version = "0.31.2", default-features = false, features = [
  "colors",
] }
futures = { version = "0.3.28" }
indexmap = { version = "2.0.0", features = ["serde"] }
lazy_static = "1.4.0"
libc = "0.2.147"
log = "0.4.19"
mlua = { version = "0.9.0", features = ["lua52", "vendored", "serialize"] }
phf = { version = "0.12.1", features = ["macros"] }
tui = { package = "ratatui", version = "0.29.0", features = ["serde"] }
serde = { version = "1.0.177", features = ["derive"] }
serde_json = "1.0.138"
serde_yaml = "0.9.25"
tokio = { version = "1", features = ["full"] }
triggered = "0.1.2"
tui-input = "0.14.0"
unicode-segmentation = "1.12.0"
unicode-width = "0.2.0"
which = "8.0.0"
xdg = "3.0.0"
termwiz = "0.23.3"
portable-pty = { version = "0.9" }
bitflags = { version = "2.3.3", features = ["serde"] }
compact_str = { version = "0.9.0", features = ["serde"] }
bincode = "1.3.3"
tokio-util = { version = "0.7.8", features = ["full"] }
bytes = "1.5.0"
log-panics = { version = "2.1.0", features = ["with-backtrace"] }
scopeguard = "1.2.0"
itoa = "1"

[target."cfg(unix)".dependencies]
daemonize = "0.5.0"

[target."cfg(windows)".dependencies]
winapi = { version = "0.3", features = ["consoleapi", "winuser"] }

[lints.clippy]
while_let_loop = "allow"
collapsible_else_if = "allow"
